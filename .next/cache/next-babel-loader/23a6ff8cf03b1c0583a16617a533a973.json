{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\n\nfunction useWindowSize() {\n  _s();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  var _useState = useState({\n    width: undefined,\n    height: undefined\n  }),\n      windowSize = _useState[0],\n      setWindowSize = _useState[1];\n\n  useEffect(function () {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener('resize', handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return function () {\n      return window.removeEventListener('resize', handleResize);\n    };\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n_s(useWindowSize, \"CjfKsGs2OagLsgbbJDGKUlkMt48=\");\n\nexport default useWindowSize;","map":{"version":3,"sources":["C:/Users/tansu/Downloads/Kopya-20210520T200531Z-001/Kopya/hooks/useWindowSize.js"],"names":["useEffect","useState","useWindowSize","width","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AACA,SAASC,aAAT,GAAyB;AAAA;;AACrB;AACA;AAFqB,kBAGeD,QAAQ,CAAC;AACzCE,IAAAA,KAAK,EAAEC,SADkC;AAEzCC,IAAAA,MAAM,EAAED;AAFiC,GAAD,CAHvB;AAAA,MAGdE,UAHc;AAAA,MAGFC,aAHE;;AAQrBP,EAAAA,SAAS,CAAC,YAAM;AACZ;AACA,aAASQ,YAAT,GAAwB;AACpB;AACAD,MAAAA,aAAa,CAAC;AACVJ,QAAAA,KAAK,EAAEM,MAAM,CAACC,UADJ;AAEVL,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAFL,OAAD,CAAb;AAIH,KARW,CAUZ;;;AACAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAXY,CAaZ;;AACAA,IAAAA,YAAY,GAdA,CAgBZ;;AACA,WAAO;AAAA,aAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAN;AAAA,KAAP;AACH,GAlBQ,EAkBN,EAlBM,CAAT,CARqB,CA0Bd;;AAEP,SAAOF,UAAP;AACH;;GA7BQJ,a;;AA8BT,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nfunction useWindowSize() {\r\n    // Initialize state with undefined width/height so server and client renders match\r\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: undefined,\r\n        height: undefined,\r\n    })\r\n\r\n    useEffect(() => {\r\n        // Handler to call on window resize\r\n        function handleResize() {\r\n            // Set window width/height to state\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n            })\r\n        }\r\n\r\n        // Add event listener\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize()\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener('resize', handleResize)\r\n    }, []) // Empty array ensures that effect is only run on mount\r\n\r\n    return windowSize\r\n}\r\nexport default useWindowSize\r\n"]},"metadata":{},"sourceType":"module"}