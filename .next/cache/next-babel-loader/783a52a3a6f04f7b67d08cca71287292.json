{"ast":null,"code":"import { useEffect } from 'react';\n\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener('resize', handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\nexport default useWindowSize;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/React/Kopya/hooks/useWindowSize.js"],"names":["useEffect","useWindowSize","windowSize","setWindowSize","useState","width","undefined","height","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;;AACA,SAASC,aAAT,GAAyB;AACrB;AACA;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC;AACzCC,IAAAA,KAAK,EAAEC,SADkC;AAEzCC,IAAAA,MAAM,EAAED;AAFiC,GAAD,CAA5C;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,aAASQ,YAAT,GAAwB;AACpB;AACAL,MAAAA,aAAa,CAAC;AACVE,QAAAA,KAAK,EAAEI,MAAM,CAACC,UADJ;AAEVH,QAAAA,MAAM,EAAEE,MAAM,CAACE;AAFL,OAAD,CAAb;AAIH,KARW,CAUZ;;;AACAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAXY,CAaZ;;AACAA,IAAAA,YAAY,GAdA,CAgBZ;;AACA,WAAO,MAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAb;AACH,GAlBQ,EAkBN,EAlBM,CAAT,CARqB,CA0Bd;;AAEP,SAAON,UAAP;AACH;;AACD,eAAeD,aAAf","sourcesContent":["import { useEffect } from 'react'\r\nfunction useWindowSize() {\r\n    // Initialize state with undefined width/height so server and client renders match\r\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: undefined,\r\n        height: undefined,\r\n    })\r\n\r\n    useEffect(() => {\r\n        // Handler to call on window resize\r\n        function handleResize() {\r\n            // Set window width/height to state\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n            })\r\n        }\r\n\r\n        // Add event listener\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize()\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener('resize', handleResize)\r\n    }, []) // Empty array ensures that effect is only run on mount\r\n\r\n    return windowSize\r\n}\r\nexport default useWindowSize\r\n"]},"metadata":{},"sourceType":"module"}